import { useCallback, useEffect, useMemo, useState } from 'react'
import Head from 'next/head'
import { TextGradient } from '@aleph-front/core'

const launchTime = new Date('2024-01-26T09:00:00.000Z').valueOf()

function toBase(time: number, base: number) {
  let decimal = Math.max(launchTime - Math.trunc(time / 1000), 0)

  const symbols =
    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')
  let conversion = ''

  if (base > symbols.length || base <= 1) {
    throw new Error('Invalid base')
  }

  while (decimal >= 1) {
    conversion =
      symbols[decimal - base * Math.floor(decimal / base)] + conversion
    decimal = Math.floor(decimal / base)
  }

  return base < 11 ? parseInt(conversion) : conversion
}

const sec = 1000
const min = sec * 60
const hour = min * 60

function timeToDate(time: number): string {
  const rem = Math.max(launchTime - time, 0)

  const hours = Math.floor(rem / hour)
  const mins = Math.floor((rem - hours * hour) / min)
  const secs = Math.floor((rem - (hours * hour + mins * min)) / sec)

  const h = hours.toString().padEnd(2, '0')
  const m = mins.toString().padEnd(2, '0')
  const s = secs.toString().padEnd(2, '0')

  return `${h}:${m}:${s}`
}

export default function UseCases() {
  const [time, setTime] = useState(0)
  const [clicks, setClicks] = useState(0)
  const [keys, setKeys] = useState(new Set())

  useEffect(() => {
    let it: NodeJS.Timer

    function start() {
      it = setInterval(() => setTime(Date.now()), 1000)
    }

    start()
    return () => it && clearInterval(it)
  }, [])

  const handleClicks = useCallback(() => {
    setClicks((c) => c + 1)
  }, [])

  useEffect(() => {
    const handleKeydown = (e: KeyboardEvent) => {
      setKeys((keys) => {
        keys.add(e.key)
        return new Set(keys)
      })
    }

    const handleKeyup = (e: KeyboardEvent) => {
      setKeys((keys) => {
        keys.delete(e.key)
        return new Set(keys)
      })
    }

    document.addEventListener('keydown', handleKeydown)
    document.addEventListener('keyup', handleKeyup)

    return () => {
      document.removeEventListener('keydown', handleKeydown)
      document.removeEventListener('keyup', handleKeyup)
    }
  }, [])

  const date = useMemo(() => timeToDate(time), [time])
  const date26 = useMemo(() => toBase(time, 26), [time])
  const hotkey = useMemo(
    () =>
      keys.has('Shift') &&
      keys.has('2') &&
      keys.has('6') &&
      (keys.has('Meta') || keys.has('Control')),
    [keys],
  )
  const showTime = useMemo(() => clicks >= 26 || hotkey, [clicks, hotkey])

  return (
    <>
      <Head>
        <title>Aleph.im</title>
        <meta name="description" content="Aleph.im" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <section
        className="fx-grain-1"
        tw="fixed! top-0 left-0 w-full h-full flex flex-col items-center justify-center p-6!"
        onClick={handleClicks}
      >
        <TextGradient
          color="main0"
          size="8rem"
          type="header"
          forwardedAs="h1"
          tw="pointer-events-none"
        >
          {showTime ? date : date26}
        </TextGradient>

        <div
          className="tp-body2 fs-18"
          tw="absolute left-0 bottom-0 w-full flex gap-2 items-center justify-center p-6"
        >
          powered by
          <svg
            width="125"
            height="27"
            viewBox="0 0 125 27"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M22.0917 20.2976C21.9013 20.2976 21.785 20.2213 21.711 20.0714C21.6343 19.9188 21.6343 19.7688 21.7295 19.6163L30.2285 5.02189C30.3237 4.8509 30.4586 4.70096 30.6093 4.58521C30.7812 4.45369 30.9901 4.39581 31.2598 4.39581H34.7928C35.0598 4.39581 35.2317 4.45369 35.3454 4.58521C35.4591 4.71674 35.5173 4.86931 35.5358 5.02189L37.7888 19.6163C37.8259 19.8241 37.7888 19.9951 37.6751 20.1082C37.5614 20.2213 37.4081 20.2976 37.2547 20.2976H34.486C34.2559 20.2976 34.0841 20.2397 33.9889 20.145C33.8937 20.0503 33.817 19.9188 33.7985 19.7846L33.4177 17.5092H27.288L25.9129 19.8214C25.8362 19.9346 25.741 20.0293 25.6061 20.1424C25.4713 20.2555 25.2994 20.2949 25.072 20.2949H22.0917V20.2976ZM28.9301 14.2315H33.1903L32.3493 8.22329L28.9301 14.2315Z"
              fill="#141327"
            />
            <path
              d="M39.8171 20.2976C39.6452 20.2976 39.5103 20.2397 39.4363 20.145C39.3411 20.0503 39.3226 19.8978 39.3411 19.7478L42.5699 4.71676C42.6069 4.54577 42.6836 4.41425 42.8185 4.30113C42.9533 4.18802 43.1041 4.14856 43.2574 4.14856H45.9706C46.124 4.14856 46.2377 4.20643 46.3329 4.30113C46.4281 4.41425 46.4466 4.54841 46.4281 4.71676L43.2204 19.7294C43.1834 19.9004 43.1067 20.0319 42.9719 20.1266C42.837 20.2397 42.6863 20.2792 42.5329 20.2792H39.8197V20.2976H39.8171Z"
              fill="#141327"
            />
            <path
              d="M51.5608 20.5264C50.3761 20.5264 49.3633 20.3002 48.5621 19.8819C47.7608 19.4663 47.2055 18.8008 46.9199 17.9301C46.6132 17.0593 46.5947 15.9966 46.8247 14.7445C46.8617 14.6313 46.8829 14.4972 46.9199 14.3288C46.9569 14.1578 46.9781 14.0263 47.0151 13.95C47.3219 12.7557 47.8164 11.7325 48.4854 10.8591C49.1544 10.0068 49.9742 9.3439 50.9685 8.90723C51.9416 8.45214 53.0311 8.24432 54.1973 8.24432C55.5354 8.24432 56.5852 8.51001 57.3494 9.04139C58.1136 9.57276 58.6108 10.2935 58.8594 11.2011C59.1079 12.1113 59.1079 13.153 58.8594 14.3104L58.7642 14.8602C58.7271 15.0312 58.6504 15.1627 58.4971 15.2758C58.3437 15.3889 58.1903 15.4284 58.0184 15.4284H50.704V15.5047C50.704 15.5415 50.6855 15.5626 50.667 15.5994C50.5903 16.0361 50.5903 16.4333 50.6485 16.8121C50.7067 17.1725 50.8574 17.4566 51.106 17.6828C51.3546 17.909 51.6798 18.0037 52.1003 18.0037C52.3859 18.0037 52.653 17.9458 52.883 17.8511C53.1131 17.7564 53.3035 17.6433 53.4754 17.5092C53.6473 17.3776 53.7821 17.2619 53.8958 17.1882C54.0677 17.0357 54.2026 16.941 54.2766 16.9041C54.3718 16.8673 54.5067 16.8463 54.6971 16.8463H57.5424C57.6958 16.8463 57.8095 16.8831 57.8862 16.9778C57.9629 17.0725 57.9814 17.1856 57.9232 17.3382C57.8465 17.6039 57.6561 17.9064 57.3309 18.2668C57.0241 18.6272 56.5852 18.9876 56.0325 19.3479C55.4772 19.7083 54.8293 19.9924 54.0836 20.2187C53.3379 20.4449 52.4996 20.5606 51.5635 20.5606V20.5238L51.5608 20.5264ZM51.1986 13.1714H55.0752V13.1345C55.2286 12.6426 55.2471 12.2244 55.1519 11.864C55.0752 11.5036 54.9033 11.2195 54.6548 11.0301C54.4062 10.8407 54.0624 10.7276 53.6605 10.7276C53.2585 10.7276 52.8777 10.8223 52.5525 11.0301C52.2272 11.2195 51.9416 11.5036 51.7301 11.864C51.5 12.2244 51.3281 12.661 51.2144 13.1345V13.1714H51.1959H51.1986Z"
              fill="#141327"
            />
            <path
              d="M59.0101 24.6196C58.8382 24.6196 58.7245 24.5617 58.6293 24.467C58.5526 24.3539 58.5156 24.2198 58.5526 24.0488L61.7602 9.03615C61.7973 8.86516 61.8739 8.73363 62.0088 8.61789C62.1437 8.50477 62.2944 8.46531 62.4663 8.46531H65.0261C65.1979 8.46531 65.3117 8.52319 65.4068 8.61789C65.502 8.71259 65.5206 8.86516 65.4835 9.03615L65.3302 9.87004C65.7876 9.39654 66.3033 9.01773 66.8586 8.69417C67.4113 8.37325 68.1385 8.22067 69.0164 8.22067C69.7622 8.22067 70.41 8.33379 70.9839 8.58106C71.5392 8.80729 71.9967 9.16768 72.3404 9.62276C72.6842 10.0779 72.9143 10.6461 73.0095 11.309C73.1232 11.9719 73.1047 12.7295 72.9724 13.5634C72.9354 13.8659 72.8772 14.1316 72.8191 14.3604C72.7609 14.5866 72.7054 14.8523 72.6287 15.1575C72.4198 15.9545 72.1315 16.6937 71.7878 17.3566C71.444 18.0195 71.0235 18.5877 70.5475 19.0428C70.0689 19.4979 69.4977 19.8767 68.8657 20.124C68.2363 20.3713 67.5488 20.5028 66.7846 20.5028C66.0203 20.5028 65.3328 20.3713 64.7986 20.1056C64.246 19.8399 63.844 19.4611 63.614 18.9876L62.506 24.0304C62.4689 24.2014 62.3922 24.3329 62.2574 24.446C62.1225 24.5407 61.9718 24.5986 61.8184 24.5986H59.0312L59.0127 24.617L59.0101 24.6196ZM65.9807 17.475C66.4778 17.475 66.8983 17.3619 67.2421 17.1541C67.5858 16.9463 67.8529 16.6622 68.083 16.2834C68.313 15.923 68.4849 15.5258 68.6171 15.0707C68.6938 14.8444 68.752 14.6156 68.8075 14.3683C68.8657 14.121 68.9027 13.8948 68.9027 13.6659C68.9609 13.2293 68.9794 12.8321 68.9212 12.4717C68.8842 12.1113 68.7308 11.8272 68.5008 11.6009C68.2707 11.3931 67.9084 11.28 67.3928 11.28C66.8771 11.28 66.4752 11.3931 66.0944 11.6009C65.7136 11.8272 65.4254 12.1139 65.1979 12.4533C64.9705 12.7926 64.8172 13.174 64.7008 13.5897C64.6056 13.8738 64.5289 14.1579 64.4919 14.4235C64.4337 14.6892 64.3967 14.9917 64.3385 15.2943C64.2803 15.6731 64.2803 16.0335 64.3385 16.357C64.3967 16.6779 64.5686 16.9436 64.8357 17.1541C65.1027 17.3619 65.465 17.4566 65.9437 17.4566L65.9807 17.475Z"
              fill="#141327"
            />
            <path
              d="M74.3846 20.2976C74.2127 20.2976 74.0778 20.2397 74.0038 20.145C73.9086 20.0503 73.8901 19.8978 73.9086 19.7478L77.1374 4.73517C77.1744 4.56418 77.2511 4.43265 77.3859 4.31691C77.5208 4.2038 77.6715 4.16434 77.8249 4.16434H80.7655C80.9189 4.16434 81.0326 4.22221 81.1278 4.31691C81.223 4.43002 81.2415 4.56418 81.223 4.73517L80.115 9.81479C80.6121 9.34129 81.1463 8.96249 81.7571 8.6968C82.368 8.4127 83.0555 8.28117 83.8568 8.28117C84.7929 8.28117 85.5756 8.47057 86.2261 8.86779C86.8767 9.265 87.3156 9.83321 87.5827 10.6119C87.8498 11.3695 87.8498 12.3165 87.6012 13.416L86.2261 19.7662C86.1891 19.9372 86.1124 20.0687 85.9776 20.1634C85.8427 20.2766 85.7105 20.316 85.5571 20.316H82.598C82.4262 20.316 82.2913 20.2581 82.2172 20.1634C82.122 20.0687 82.1035 19.9162 82.1221 19.7662L83.4601 13.5502C83.6135 12.8294 83.5738 12.2796 83.3464 11.9008C83.1163 11.522 82.6774 11.3142 82.0083 11.3142C81.5879 11.3142 81.1859 11.3905 80.8237 11.5615C80.4614 11.7325 80.1361 11.9771 79.8875 12.3191C79.6205 12.6611 79.4486 13.0583 79.3349 13.5318L78.0365 19.7478C77.9994 19.9188 77.9228 20.0503 77.7879 20.145C77.653 20.2581 77.5023 20.2976 77.3489 20.2976H74.3898H74.3846Z"
              fill="#141327"
            />
            <path
              d="M95.3546 20.145C95.4313 20.2397 95.5635 20.2976 95.7354 20.2976H98.4485C98.6019 20.2976 98.7553 20.2608 98.8875 20.145C99.0224 20.0503 99.0964 19.9188 99.1361 19.7478L101.408 9.05719C101.445 8.8862 101.426 8.73626 101.331 8.64156C101.236 8.54686 101.122 8.48898 100.969 8.48898H98.2555C98.0836 8.48898 97.9302 8.52581 97.798 8.64156C97.6631 8.75467 97.5891 8.88883 97.5494 9.05719L95.2567 19.7478C95.2382 19.9004 95.2567 20.0503 95.3519 20.145H95.3546Z"
              fill="#141327"
            />
            <path
              d="M102.288 20.2976C102.116 20.2976 101.981 20.2397 101.907 20.145C101.812 20.0503 101.794 19.8977 101.812 19.7478L104.105 9.05719C104.142 8.8862 104.219 8.75467 104.353 8.64156C104.488 8.52844 104.639 8.48898 104.811 8.48898H107.313C107.484 8.48898 107.598 8.54686 107.693 8.64156C107.789 8.73626 107.807 8.88883 107.77 9.05719L107.617 9.8332C107.884 9.56752 108.172 9.30183 108.476 9.0756C108.783 8.84937 109.164 8.63893 109.584 8.48898C110.005 8.33641 110.502 8.26276 111.094 8.26276C111.972 8.26276 112.699 8.43374 113.252 8.79413C113.807 9.1361 114.188 9.62802 114.378 10.2541C114.875 9.68589 115.428 9.21239 116.039 8.83359C116.65 8.45479 117.396 8.2838 118.236 8.2838C119.077 8.2838 119.783 8.45479 120.376 8.81517C120.968 9.17556 121.389 9.72535 121.637 10.4645C121.886 11.2037 121.886 12.1507 121.637 13.3266L120.262 19.7899C120.225 19.9609 120.148 20.0924 120.014 20.1871C119.879 20.3002 119.728 20.3397 119.575 20.3397H116.92C116.748 20.3397 116.613 20.2818 116.539 20.1871C116.444 20.0924 116.425 19.9398 116.444 19.7899L117.8 13.4976C117.914 12.9662 117.954 12.5506 117.877 12.227C117.8 11.9245 117.647 11.6956 117.438 11.5641C117.229 11.4326 116.941 11.3563 116.615 11.3563C116.33 11.3563 116.023 11.4326 115.719 11.5641C115.412 11.6956 115.145 11.9245 114.897 12.227C114.648 12.5295 114.476 12.9662 114.362 13.4976L113.006 19.7899C112.969 19.9609 112.892 20.0924 112.757 20.1871C112.622 20.3002 112.472 20.3397 112.318 20.3397H109.663C109.491 20.3397 109.357 20.2818 109.283 20.1871C109.187 20.0924 109.169 19.9398 109.187 19.7899L110.562 13.4976C110.676 12.9662 110.676 12.5506 110.599 12.227C110.523 11.9061 110.369 11.6956 110.161 11.5641C109.952 11.4326 109.682 11.3563 109.359 11.3563C109.074 11.3563 108.767 11.4326 108.463 11.5641C108.156 11.6956 107.889 11.9245 107.64 12.227C107.392 12.5295 107.22 12.9478 107.106 13.4581L105.731 19.7899C105.694 19.9609 105.617 20.0924 105.483 20.1871C105.348 20.3002 105.197 20.3397 105.044 20.3397H102.33L102.293 20.3029L102.288 20.2976Z"
              fill="#141327"
            />
            <path
              d="M91.0627 20.3344C92.199 20.3344 93.1201 19.4181 93.1201 18.2879C93.1201 17.1576 92.199 16.2413 91.0627 16.2413C89.9265 16.2413 89.0054 17.1576 89.0054 18.2879C89.0054 19.4181 89.9265 20.3344 91.0627 20.3344Z"
              fill="#141327"
            />
            <path
              d="M100.31 7.2184C101.446 7.2184 102.368 6.30212 102.368 5.17182C102.368 4.04153 101.446 3.12524 100.31 3.12524C99.1739 3.12524 98.2528 4.04153 98.2528 5.17182C98.2528 6.30212 99.1739 7.2184 100.31 7.2184Z"
              fill="#141327"
            />
            <path
              d="M13.5713 10.4C15.1777 10.4 16.4787 9.09906 16.4787 7.49262C16.4787 5.88618 15.1777 4.58524 13.5713 4.58524C11.9648 4.58524 10.6639 5.88618 10.6639 7.49262C10.6639 9.09906 11.9648 10.4 13.5713 10.4Z"
              fill="#141327"
            />
            <path
              d="M3.63773 20.3336C5.24417 20.3336 6.54512 19.0326 6.54512 17.4262C6.54512 15.8197 5.24417 14.5188 3.63773 14.5188C2.0313 14.5188 0.730347 15.8224 0.730347 17.4262C0.730347 19.03 2.0313 20.3336 3.63773 20.3336Z"
              fill="#141327"
            />
            <path
              d="M11.5171 5.43849C8.75987 4.29555 5.47062 4.84596 3.22951 7.08443C0.988405 9.32554 0.440637 12.6174 1.58094 15.3721L11.5171 5.43586V5.43849Z"
              fill="#141327"
            />
            <path
              d="M5.69186 19.4829C8.44914 20.6259 11.7384 20.0755 13.9795 17.837C16.2206 15.5959 16.7684 12.304 15.6254 9.54938L5.69186 19.4829Z"
              fill="#141327"
            />
          </svg>
        </div>
      </section>
    </>
  )
}
